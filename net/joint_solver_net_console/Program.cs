using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using joinery_solver_net;
using Rhino.Runtime.InProcess;
using Rhino.Geometry;
using Rhino;
using System.IO;

//namespace joint_solver_net_console {
//    internal class Program {
//        private static void Main(string[] args) {
//            Console.WriteLine(joinery_solver_net.Test.get_square(4));
//            joinery_solver_net.Test.test_set_coord();
//            joinery_solver_net.Test.test_get_coord();
//            joinery_solver_net.Test.pinvoke_get_connection_zones();
//        }
//    }
//}

namespace joint_solver_net_console
{
    internal class Program
    {
        #region Program static constructor

        static Program()
        {
            Resolver.Initialize();
        }

        #endregion Program static constructor

        // Use STAThread for this app as we are starting Rhino in a mode that does actually
        // include user interface (we just never show the main window). This allows for things
        // like RhinoApp().RunScript to properly run.
        [System.STAThread]
        private static void Main(string[] args)
        {
            //Console.WriteLine(joinery_solver_net.Test.get_square(4));
            //joinery_solver_net.Test.test_set_coord();
            //joinery_solver_net.Test.test_get_coord();

            //    var polylines = new List<Polyline>() {
            //        new Polyline{ new Point3d(0, 0, 0) , new Point3d(0, 10, 0) , new Point3d(10, 10, 0), new Point3d(10, 0, 0),new Point3d(0, 0, 0) },
            //        new Polyline{ new Point3d(0, 0, 1), new Point3d(0, 10, 1), new Point3d(10, 10, 1), new Point3d(10, 0, 1), new Point3d(0, 0, 1) },
            //new Polyline{ new Point3d(10, 0, 0) , new Point3d(10, 10, 0) , new Point3d(20, 10, 0), new Point3d(20, 0, 0),new Point3d(10, 0, 0) },
            //new Polyline{ new Point3d(10, 0, 1) , new Point3d(10, 10, 1) , new Point3d(20, 10, 1), new Point3d(20, 0, 1),new Point3d(10, 0, 1) }
            //    };

            var polylines = new List<Polyline>() { new Polyline { new Point3d(103.101164057554, -168.144017763627, -4.84257725427183), new Point3d(103.220368133536, -174.560240359422, -4.84257725427183), new Point3d(87.3697239186844, -175.931135271215, 3.5843131117689), new Point3d(87.2903935645079, -166.710771543406, 3.53549599948611), new Point3d(103.101164057554, -168.144017763627, -4.84257725427183) }, new Polyline { new Point3d(170.357358273682, -168.717643892134, -4.84257725427182), new Point3d(170.303092811157, -174.404708637697, -4.84257725427182), new Point3d(101.643748899307, -180.348253045896, 31.6947216259913), new Point3d(101.596628040556, -162.450556115856, 31.8107732071514), new Point3d(170.357358273682, -168.717643892134, -4.84257725427182) }, new Polyline { new Point3d(102.390433098204, -174.562167545047, -4.84257725427183), new Point3d(95.1798412185984, -183.856531471856, -4.84257725427183), new Point3d(81.4073998381975, -184.617657612296, 1.91310045425749), new Point3d(56.0451248288141, -188.647489119737, 13.3088824837899), new Point3d(61.4109489112137, -175.395862853761, 15.8277007080937), new Point3d(86.8809637256146, -175.779887719155, 2.62177810770848), new Point3d(102.390433098204, -174.562167545047, -4.84257725427183) }, new Polyline { new Point3d(175.140227727195, -174.393491274917, -4.84257725427182), new Point3d(165.399705197948, -188.408894965771, -4.84257725427182), new Point3d(94.5690630964894, -192.288005180567, 29.7569691120164), new Point3d(66.5602662361539, -196.756094485931, 42.4032537300888), new Point3d(73.1788784964193, -179.752046169594, 45.0433518630095), new Point3d(101.134711862143, -180.190730794962, 30.6922546215575), new Point3d(175.140227727195, -174.393491274917, -4.84257725427182) }, new Polyline { new Point3d(94.6049222619593, -158.827452332825, -4.84257725427183), new Point3d(102.154317732449, -168.135945727292, -4.84257725427183), new Point3d(86.8104714213123, -166.853686279068, 2.58696326994993), new Point3d(61.4636979008407, -167.270550243101, 15.9278446477725), new Point3d(56.0153483439552, -154.092116051133, 13.2063345767824), new Point3d(81.1107645805337, -158.030320160268, 1.83058304412907), new Point3d(94.6049222619593, -158.827452332825, -4.84257725427183) }, new Polyline { new Point3d(164.850434028811, -154.608310235458, -4.84257725427182), new Point3d(175.185066991921, -168.758816497918, -4.84257725427184), new Point3d(101.085442975785, -162.602780553594, 30.8004514879714), new Point3d(73.2507522755069, -163.084700577564, 45.2344330798749), new Point3d(66.5063295180702, -146.109570787602, 42.339543090708), new Point3d(94.7015805950083, -150.534861119202, 29.5561954041876), new Point3d(164.850434028811, -154.608310235458, -4.84257725427182) }, new Polyline { new Point3d(87.4579039264342, -166.660889079272, 3.86656857672871), new Point3d(87.5731169583693, -175.994075542937, 3.984863162806), new Point3d(60.6791202199363, -175.124958790994, 14.0108261597959), new Point3d(34.0236673711162, -177.526617152082, 24.004258156631), new Point3d(33.9648204634588, -165.156025526148, 23.8124221459569), new Point3d(60.6451928875649, -167.561219890254, 13.8927654166761), new Point3d(87.4579039264342, -166.660889079272, 3.86656857672871) }, new Polyline { new Point3d(101.770180066765, -162.39887452062, 32.1537867135503), new Point3d(101.898423689679, -180.427062529895, 32.1962628804975), new Point3d(72.4429994064364, -179.479642753934, 43.2164215921006), new Point3d(42.1688813590113, -182.206334260247, 54.5614493546714), new Point3d(42.1303818980181, -160.643157988386, 54.4676419458916), new Point3d(72.4113805580019, -163.382780463454, 43.1474721917215), new Point3d(101.770180066765, -162.39887452062, 32.1537867135503) }, new Polyline { new Point3d(61.2222602593701, -175.326015192701, 15.3592528142446), new Point3d(56.1860143624668, -188.756134128335, 13.6987100893365), new Point3d(31.0234744032793, -188.460158899932, 20.2842580908472), new Point3d(4.3874679753317, -191.711637411483, 26.4682899152899), new Point3d(6.30004620196417, -176.168800727712, 29.4047630914269), new Point3d(33.5201926241565, -177.237352881017, 22.1154466252093), new Point3d(61.2222602593701, -175.326015192701, 15.3592528142446) }, new Polyline { new Point3d(73.0573815201865, -179.707071129851, 44.7417173870131), new Point3d(66.6503693896795, -196.825576282312, 42.6525603725373), new Point3d(37.9282597913002, -196.499507585148, 50.2167019512211), new Point3d(8.20182292019601, -200.143015599375, 57.1708185620602), new Point3d(10.5936407620821, -180.674463616056, 60.8236340396726), new Point3d(41.6104554909245, -181.885498602349, 52.4664858526171), new Point3d(73.0573815201865, -179.707071129851, 44.7417173870131) }, new Polyline { new Point3d(56.1265468914763, -154.007505524807, 13.5151303335961), new Point3d(61.2520136151796, -167.345724121847, 15.4015261936262), new Point3d(33.5274868096565, -165.397727075421, 22.1705804439916), new Point3d(6.28790225262967, -166.476871355039, 29.5448880530531), new Point3d(4.335363097453, -151.027474139118, 26.3194743054992), new Point3d(30.908231380414, -154.24029149475, 20.1569703144441), new Point3d(56.1265468914763, -154.007505524807, 13.5151303335961) }, new Polyline { new Point3d(66.5823856236273, -146.05170000363, 42.5507491109246), new Point3d(73.1082879311394, -163.135292889202, 44.8802187211457), new Point3d(41.6305003122233, -160.919427954553, 52.5909822686255), new Point3d(10.649602649542, -162.14571159376, 60.9850908258437), new Point3d(8.20849932623555, -142.706095378301, 57.0303777429252), new Point3d(37.9711621292232, -146.313200335686, 50.0970061052479), new Point3d(66.5823856236273, -146.05170000363, 42.5507491109246) }, new Polyline { new Point3d(33.9363144517133, -165.171779967048, 23.7054046355649), new Point3d(33.9869861590817, -177.50554248225, 23.8666466940983), new Point3d(6.03712563735187, -175.892894045335, 27.4808116857852), new Point3d(-21.9520427369665, -178.079860240305, 31.1517944108748), new Point3d(-21.9615520938791, -164.610169225315, 30.9697400025079), new Point3d(5.9852803213932, -166.777374326857, 27.3635151902349), new Point3d(33.9363144517133, -165.171779967048, 23.7054046355649) }, new Polyline { new Point3d(42.0981659833635, -160.660962784371, 54.3466966866211), new Point3d(42.1497123765864, -182.195320993421, 54.4895359265033), new Point3d(10.2977693372822, -180.363978571468, 58.6585609330016), new Point3d(-21.8075726940676, -182.875520141109, 62.8910254613901), new Point3d(-21.8231031338788, -159.983468118556, 62.73402542562), new Point3d(10.3093980113578, -162.48353411833, 58.5328126234423), new Point3d(42.0981659833635, -160.660962784371, 54.3466966866211) }, new Polyline { new Point3d(6.26364089296175, -176.13059729527, 29.1383630647446), new Point3d(4.38398446047263, -191.703937333324, 26.4402503866414), new Point3d(-22.0253494856129, -189.886457363436, 26.8975077409489), new Point3d(-48.6942027336352, -191.770951180831, 26.7123892209139), new Point3d(-50.0890918720604, -176.162863564258, 29.4340523757197), new Point3d(-21.9618068859027, -177.755740882555, 29.0066674843664), new Point3d(6.26364089296175, -176.13059729527, 29.1383630647446) }, new Polyline { new Point3d(10.5592035154247, -180.638325452084, 60.5716355350649), new Point3d(8.19434943511629, -200.126495957129, 57.1106629412363), new Point3d(-22.1561546954222, -198.041395101117, 57.6500065928586), new Point3d(-52.5498397208197, -200.188049328666, 57.4352200409554), new Point3d(-54.3070040400128, -180.663711632962, 60.9254085357304), new Point3d(-21.8188281226463, -182.501897994826, 60.4182730411295), new Point3d(10.5592035154247, -180.638325452084, 60.5716355350649) }, new Polyline { new Point3d(4.33158520089279, -151.035590896789, 26.2895185772201), new Point3d(6.25236603234306, -166.512158750634, 29.2887342896308), new Point3d(-21.9696587544055, -164.881078412568, 29.1098323600955), new Point3d(-50.1496087094019, -166.483036218295, 29.5592218694636), new Point3d(-48.719476228501, -150.967420560845, 26.5360089647133), new Point3d(-22.0297182823075, -152.833325531775, 26.7680625382249), new Point3d(4.33158520089279, -151.035590896789, 26.2895185772201) }, new Polyline { new Point3d(8.20066087771867, -142.72293617479, 56.9682250528876), new Point3d(10.6192556165991, -162.175846136713, 60.766341993404), new Point3d(-21.832531837273, -160.298557465771, 60.570802055926), new Point3d(-54.2858458446508, -162.140877220093, 61.1039660298323), new Point3d(-52.4865720398801, -142.666073468587, 57.2791742088254), new Point3d(-22.1523442051266, -144.789022530926, 57.5340792855326), new Point3d(8.20066087771867, -142.72293617479, 56.9682250528876) }, new Polyline { new Point3d(-21.9624046013355, -164.638658404231, 30.7741495829695), new Point3d(-21.9529042014825, -178.051264063879, 30.962535649925), new Point3d(-49.8383904507076, -175.895345189482, 27.5622903675802), new Point3d(-77.922637999625, -177.555754690902, 24.1912987902115), new Point3d(-77.8879833443373, -165.136238344287, 24.0221125309849), new Point3d(-49.8705629011466, -166.775974274699, 27.431097116794), new Point3d(-21.9624046013355, -164.638658404231, 30.7741495829695) }, new Polyline { new Point3d(-21.8241155007303, -160.017299494627, 62.5017585337278), new Point3d(-21.8085589838237, -182.842780410858, 62.6743433186911), new Point3d(-54.01710638812, -180.354367759811, 58.7610035310287), new Point3d(-85.9078813756089, -182.23760546026, 54.9187835157588), new Point3d(-85.8828928568727, -160.61116713176, 54.7600687406826), new Point3d(-53.9619768795876, -162.480869946551, 58.6340003798122), new Point3d(-21.8241155007303, -160.017299494627, 62.5017585337278) }, new Polyline { new Point3d(-50.0626461000446, -176.134643820185, 29.2366055839624), new Point3d(-48.6569503411418, -191.689626864019, 26.4155513816617), new Point3d(-75.1567489527101, -188.517765200315, 20.4463507732185), new Point3d(-100.653266728757, -188.837001804094, 14.0157201070396), new Point3d(-105.082676117382, -175.348154206345, 15.6605350003009), new Point3d(-77.4009503093026, -177.249882496494, 22.1838270349863), new Point3d(-50.0626461000446, -176.134643820185, 29.2366055839624) }, new Polyline { new Point3d(-54.2727484480214, -180.62715818924, 60.6696528431227), new Point3d(-52.5092245725898, -200.09938390449, 57.1115867912623), new Point3d(-82.3429451022437, -196.519325397734, 50.3588710579379), new Point3d(-111.278353012194, -196.872335877463, 43.0235541511428), new Point3d(-116.921750682501, -179.709433774878, 45.1333043969356), new Point3d(-85.310552150829, -181.887383662511, 52.6202405952326), new Point3d(-54.2727484480214, -180.62715818924, 60.6696528431227) }, new Polyline { new Point3d(-48.688559933088, -151.035549143679, 26.2837019286811), new Point3d(-50.1328725349145, -166.500605600386, 29.4315845205483), new Point3d(-77.4389550568673, -165.390385683172, 22.2957375400574), new Point3d(-105.183935267974, -167.313343790028, 15.738056330756), new Point3d(-100.653953140018, -153.902067699897, 13.8344519555944), new Point3d(-75.0719515031425, -154.177134609964, 20.3460105254472), new Point3d(-48.688559933088, -151.035549143679, 26.2837019286811) }, new Polyline { new Point3d(-52.4524866632104, -142.741185585898, 57.0010043878719), new Point3d(-54.2586631613963, -162.169413188615, 60.8966590595556), new Point3d(-85.364331965106, -160.904669510942, 52.7663623756268), new Point3d(-116.9184511009, -163.093229564254, 45.2963641874121), new Point3d(-111.165916624305, -145.999087923029, 42.9190185334954), new Point3d(-82.3676427695704, -146.307665384882, 50.2530775917089), new Point3d(-52.4524866632104, -142.741185585898, 57.0010043878719) }, new Polyline { new Point3d(-77.8246767278221, -165.172069512546, 23.7787181557042), new Point3d(-77.8648372594822, -177.521865374451, 23.9688796006843), new Point3d(-104.474100960719, -175.123967224325, 14.1455183362715), new Point3d(-131.44053364537, -176.045809638831, 4.24592124840131), new Point3d(-131.391981035042, -166.642518366197, 4.10773846173177), new Point3d(-104.498338154786, -167.559906849954, 14.0110919782614), new Point3d(-77.8246767278221, -165.172069512546, 23.7787181557042) }, new Polyline { new Point3d(-85.8016773750142, -160.657134611241, 54.4478203129798), new Point3d(-85.8272490505927, -182.190329692304, 54.6085076207533), new Point3d(-116.229435826795, -179.454398753469, 43.4098220436597), new Point3d(-145.744712974948, -180.46229972158, 32.5667724965894), new Point3d(-145.718323907276, -162.36514179731, 32.4335265989922), new Point3d(-116.133137115188, -163.3756540605, 43.3182209998883), new Point3d(-85.8016773750142, -160.657134611241, 54.4478203129798) }, new Polyline { new Point3d(-105.065867721179, -175.341962327535, 15.618691359357), new Point3d(-100.448223095239, -188.681935383833, 13.4559249642767), new Point3d(-125.745629039557, -184.658930773113, 2.04930902039714), new Point3d(-139.919858060534, -183.891767787935, -4.84257725427183), new Point3d(-146.155759442061, -174.550188957263, -4.84257725427183), new Point3d(-130.602536407371, -175.787073614504, 2.5867701306087), new Point3d(-105.065867721179, -175.341962327535, 15.618691359357) }, new Polyline { new Point3d(-116.854173674495, -179.684539749361, 44.9650748987143), new Point3d(-111.090271512661, -196.73009725074, 42.5100677869208), new Point3d(-139.162374629304, -192.26637302403, 29.854181984184), new Point3d(-210.868146716174, -188.426340084986, -4.84257725427182), new Point3d(-219.739114034035, -174.251432737098, -4.84257725427182), new Point3d(-144.848576923918, -180.185613035054, 30.7925123160772), new Point3d(-116.854173674495, -179.684539749361, 44.9650748987143) }, new Polyline { new Point3d(-100.491113939905, -154.024491537013, 13.3839074341794), new Point3d(-105.230560515029, -167.29657583205, 15.8555016029754), new Point3d(-130.678739294709, -166.855468979991, 2.69752968706405), new Point3d(-146.352728820472, -168.114310382159, -4.84257725427183), new Point3d(-139.631972033503, -158.802861391582, -4.84257725427183), new Point3d(-125.548820776438, -157.98805394592, 2.04881356858934), new Point3d(-100.491113939905, -154.024491537013, 13.3839074341794) }, new Polyline { new Point3d(-111.016498333494, -146.111421811207, 42.5056070682114), new Point3d(-116.888919085302, -163.103850239271, 45.2219753995768), new Point3d(-144.947649733008, -162.595239854061, 30.9097634461859), new Point3d(-219.839329872411, -168.567419681181, -4.84257725427183), new Point3d(-210.600671992713, -154.627581356027, -4.84257725427183), new Point3d(-139.284458168295, -150.57428068546, 29.7486274557621), new Point3d(-111.016498333494, -146.111421811207, 42.5056070682114) }, new Polyline { new Point3d(-131.150985574131, -166.714471714439, 3.63124655945786), new Point3d(-131.140756265477, -175.953251806968, 3.65239187576759), new Point3d(-146.939659398784, -174.547009326442, -4.84257725427183), new Point3d(-146.91940357048, -168.117807300719, -4.84257725427183), new Point3d(-131.150985574131, -166.714471714439, 3.63124655945786) }, new Polyline { new Point3d(-145.444698703302, -162.446837317693, 31.892519754056), new Point3d(-145.408203001821, -180.358400509691, 31.9005162456791), new Point3d(-213.651468109556, -174.276147221885, -4.84257725427182), new Point3d(-213.65841291673, -168.529307212028, -4.84257725427182), new Point3d(-145.444698703302, -162.446837317693, 31.892519754056) } };

            //            var polylines = new List<Polyline>() {
            //new Polyline{new Point3d(79.3722772723983,116.178055434243,0),new Point3d(44.1296460666944,133.883376279235,0),new Point3d(11.1750728299249,112.215022781386,0),new Point3d(13.4631307988593,72.8413484385437,0),new Point3d(48.7057620045632,55.1360275935513,0),new Point3d(81.6603352413327,76.8043810914008,0),new Point3d(79.3722772723983,116.178055434243,0),},
            //new Polyline{new Point3d(79.3722772723983,116.178055434243,5.91851628154928),new Point3d(44.1296460666944,133.883376279235,5.91851628154928),new Point3d(11.1750728299249,112.215022781386,5.91851628154928),new Point3d(13.4631307988593,72.8413484385437,5.91851628154928),new Point3d(48.7057620045632,55.1360275935513,5.91851628154928),new Point3d(81.6603352413327,76.8043810914008,5.91851628154928),new Point3d(79.3722772723983,116.178055434243,5.91851628154928),},
            //new Polyline{new Point3d(48.5932410001005,-17.1204299826823,0),new Point3d(105.256703853712,-17.1204299826823,0),new Point3d(48.5932410001005,31.318938635028,0),new Point3d(48.5932410001005,-17.1204299826823,0),},
            //new Polyline{new Point3d(48.5932410001005,-17.1204299826823,3.89780846412175),new Point3d(105.256703853712,-17.1204299826823,3.89780846412175),new Point3d(48.5932410001005,31.318938635028,3.89780846412175),new Point3d(48.5932410001005,-17.1204299826823,3.89780846412175),},
            //new Polyline{new Point3d(-46.0627043905459,-17.1204299826823,0),new Point3d(10.6007584630656,-17.1204299826823,0),new Point3d(10.6007584630656,31.318938635028,0),new Point3d(-46.0627043905459,31.318938635028,0),new Point3d(-46.0627043905459,-17.1204299826823,0),},
            //new Polyline{new Point3d(-46.0627043905459,-17.1204299826823,3.89780846412175),new Point3d(10.6007584630656,-17.1204299826823,3.89780846412175),new Point3d(10.6007584630656,31.318938635028,3.89780846412175),new Point3d(-46.0627043905459,31.318938635028,3.89780846412175),new Point3d(-46.0627043905459,-17.1204299826823,3.89780846412175),},
            //};

            var polylines_array = new Polyline[(int)(polylines.Count * 0.5)][];
            for (int i = 0; i < polylines_array.Length; i++)
            {
                polylines_array[i] = new Polyline[] { polylines[i * 2 + 0], polylines[i * 2 + 1] };
            }

            var lines = new List<Line>() {
new Line(new Point3d(65.1830486229479,65.9702043424761,5.91851628154928),new Point3d(80.5602903217781,54.6720408086573,5.91851628154928)),
new Line(new Point3d(48.5932410001005,1.85339312857982,0),new Point3d(41.5795635671774,2.84205148477829,0)),
new Line(new Point3d(79.3052666614427,-17.1204299826823,3.89780846412175),new Point3d(84.0932196303112,-26.1752384449411,3.89780846412175)),
new Line(new Point3d(10.6007584630656,4.1522990375585,0),new Point3d(17.8046559730008,5.2014741506303,0)),
new Line(new Point3d(-12.2775187233455,31.318938635028,3.89780846412175),new Point3d(-11.4948856916736,46.0245545911547,3.89780846412175)),
new Line(new Point3d(-46.0627043905459,10.0358113328213,0),new Point3d(-55.6164678402938,10.059307646704,0)),
new Line(new Point3d(-16.6269479562328,-17.1204299826823,3.89780846412175),new Point3d(-16.6269479562328,-27.657211435445,3.89780846412175)),
};

            var points = new List<Point3d>() {
new Point3d(26.6631135952929,66.2098932218454,5.91851628154928),
new Point3d(30.3731679287786,124.838190682803,0),
new Point3d(61.7509616695463,125.030715856739,5.91851628154928),
new Point3d(80.5163062568655,96.4912182628218,5.91851628154928),
new Point3d(76.9249724269063,7.09925432617284,3.89780846412175),
new Point3d(89.4716903982837,-17.1204299826823,3.89780846412175),
};

            var ids = new List<int>() {
0,
1,
2,
3,
4,
5,
};
            Vector3d[][] insertion_vectors = null;
            joinery_solver_net.Test.pinvoke_find_closest_plateside_to_line(polylines_array, lines, ref insertion_vectors);
            int[][] joints_ids = null;
            joinery_solver_net.Test.pinvoke_find_closest_plateside_to_indexedpoint(polylines_array, points, ids, ref joints_ids);

            //if (insertion_vectors != null)
            //{
            //    Console.WriteLine(insertion_vectors.Length.ToString());
            //    foreach (var vecs in insertion_vectors)
            //    {
            //        Console.WriteLine("New");
            //        foreach (var vec in vecs)
            //            Console.WriteLine(vec.ToString());
            //    }
            //}

            if (joints_ids != null)
            {
                Console.WriteLine(joints_ids.Length.ToString());
                foreach (var vecs in joints_ids)
                {
                    Console.WriteLine("New");
                    foreach (var vec in vecs)
                        Console.WriteLine(vec.ToString());
                }
            }

            var face_vectors = new Vector3d[2][] {
                new Vector3d[]{ new Vector3d(90, 91.1, 93) , new Vector3d(94.1, 91, 98.1) , new Vector3d(90.1, 99.4, 92.1) },
                new Vector3d[]{ new Vector3d(910.8, 910.1, 930.5) , new Vector3d(940.1, 910, 980.1) , new Vector3d(952.1, 990.4, 920.1) }
            };

            var joints_types = new int[][] {
                new int[]{  0 , 0, 0 },
                new int[]{ 930, 980, 920 }
            };

            var three_valence = new List<int[]> {
                new int[]{  93 , 98, 92, 98 },
                new int[]{ 930, 980, 920, 980 }
            };

            var adjacency = new List<int[]>
            {
                //new int[]{ 0,1 }
            };

            //Data data = new Data { polylines = polylines_array, face_vectors = face_vectors, joints_types = joints_types, three_valence = three_valence, adjacency = adjacency };
            Data data = new Data { polylines = polylines_array, face_vectors = new Vector3d[0][], joints_types = new int[0][], three_valence = new List<int[]>(), adjacency = new List<int[]>() };

            double division_length = 300;
            var jointparams = new List<double>{
                division_length, 0.5, 9,
                division_length * 1.5,0.65,10,
                division_length * 1.5, 0.5,21,
                division_length, 0.5,30,
                division_length, 0.5,40,
                division_length, 0.5,59
            };

            var scale = new List<double>{
                1,1,1
            };

            Polyline[][] out_polylines = null;
            joinery_solver_net.Test.pinvoke_get_connection_zones(ref out_polylines, data, jointparams, scale, 0, 3, 0);

            //Console.WriteLine("Please wait while Rhino is starting...");
            //try {
            //    using (new RhinoCore(new string[] { "/NOSPLASH" }, WindowStyle.Hidden)) {
            //        Console.WriteLine("Enter path to directory which contains files to convert and press ENTER:");
            //        string path = Console.ReadLine();

            //        string[] filePaths = Directory.GetFiles(path, "*.3dm");
            //        if (filePaths == null || filePaths.Length == 0) {
            //            Console.WriteLine("Directory is empty. No files to process. Press any key to exit.");
            //            Console.ReadKey();
            //            return;
            //        }

            //        foreach (string file in filePaths) {
            //            var doc = RhinoDoc.Open(file, out bool wasOpen);

            //            Console.WriteLine("Nº of objects in file: {0}", doc.Objects.Count);

            //            // View capture to .png file
            //            var pngPath = Path.ChangeExtension(file, ".png");
            //            var imgScript = string.Format("_-ViewCaptureToFile \"{0}\" _Enter", pngPath);
            //            RhinoApp.RunScript(imgScript, false);

            //            // Save the .obj file
            //            var fowo = new Rhino.FileIO.FileObjWriteOptions(new Rhino.FileIO.FileWriteOptions { SuppressAllInput = true }) {
            //                ExportMaterialDefinitions = false,
            //                MapZtoY = true,
            //                MeshParameters = MeshingParameters.Default,
            //            };

            //            var objPath = Path.ChangeExtension(file, ".obj");
            //            var result = Rhino.FileIO.FileObj.Write(objPath, doc, fowo);

            //            if (result == Rhino.PlugIns.WriteFileResult.Success)
            //                Console.WriteLine("Converted file: {0}", objPath);
            //            else
            //                Console.WriteLine("File conversion failed.");
            //        }

            //        Console.WriteLine("Finished converting. Press any key to exit...");
            //        Console.ReadKey();
            //    }
            //} catch (Exception ex) {
            //    Console.Error.WriteLine(ex.Message);
            //    Console.WriteLine("press any key to exit");
            //    Console.ReadKey();
            //}
        }
    }
}
